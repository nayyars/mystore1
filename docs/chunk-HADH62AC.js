import{M as d,a as l,b as m,c as P,d as n,e as h,g as a,na as g}from"./chunk-XC6XOCXB.js";var f=class{constructor(e,u,t,i,r,s){this.id="",this.imageUrl="",this.name="",this.category="",this.price=0,this.quantity=0,this.id=e,this.imageUrl=u,this.name=t,this.category=i,this.price=r,this.quantity=s}};var L=(()=>{let e=class e{constructor(t){this.http=t,this.ProductList=[],this.ProjectSubject=new l,this.ProjectSubjectBehav=new m([]),this.BaseUrl="http://localhost:3000/Products",this.addedProductSubject=new l}GetProductListService(){return this.http.get(this.BaseUrl).pipe(n(t=>{this.ProductList=t,this.ProjectSubject.next(this.ProductList),this.ProjectSubjectBehav.next(this.ProductList)},t=>{console.log("Error druing fetch data from GET api")}))}GetProductListServiceAsObservable(){return this.ProjectSubjectBehav.asObservable()}addProductService(t){return this.http.post(this.BaseUrl,t).pipe(n(r=>{let s=r;this.ProductList.push(s),this.ProductList.reverse(),this.addedProductSubject.next(this.ProductList)},r=>{console.log("Error during add product API")}))}updateProductService(t){return this.http.put(this.BaseUrl+"/"+t.id,t).pipe(n(i=>{let r=i;this.ProductList.push(r),this.ProductList.reverse(),this.addedProductSubject.next(this.ProductList),console.log("Updated during update product API")},i=>{console.log("Error during update product API")}))}};e.\u0275fac=function(i){return new(i||e)(a(d))},e.\u0275prov=h({token:e,factory:e.\u0275fac,providedIn:"root"});let o=e;return o})();var c=class{constructor(e,u,t,i,r,s,p){this.OrderDetailID="",this.orderidd="",this.ProductID="",this.ProductName="",this.price=0,this.Quantity=0,this.ProductCategory="",this.TotalAmount=0,this.customername="",this.ProductID=u,this.ProductName=t,this.price=i,this.Quantity=r,this.ProductCategory=s,this.TotalAmount=p}};var x=(()=>{let e=class e{constructor(t,i){this._LoginService=t,this._http=i,this.orderApiUrl="http://localhost:3000/Orders",this._NewOrderDetails=new c("","","",0,0,"",0)}CreateOderPayload(t){if(this._LoginService.getToken()){let r=this._LoginService.GetUserName(),s=this.generateId(),p=this.generateOrderId();t&&t.forEach(b=>{b.orderidd=p});let j={orderid:s,CustomerName:r,OrderDate:new Date,OrderDetails:t};return this._http.post(this.orderApiUrl,j)}return P(..."ok")}MapOdertoOrderDetails(t){let i=t.id,r=new c("","",t.name,t.price,1,t.category,0);return r.OrderDetailID=this.generateId(),r.ProductID=t.id,r.ProductName=t.name,r.price=t.price,r.Quantity=1,r.ProductCategory=t.category,r.TotalAmount=1*t.price,r}generateId(){return Math.random().toString(36).substr(2,9)}generateOrderId(){return Math.random().toString(36).substr(2,9)}getOrdersByUserName(){return this._http.get("http://localhost:3000/Orders")}};e.\u0275fac=function(i){return new(i||e)(a(g),a(d))},e.\u0275prov=h({token:e,factory:e.\u0275fac,providedIn:"root"});let o=e;return o})();export{f as a,L as b,x as c};
